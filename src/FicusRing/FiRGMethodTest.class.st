Class {
	#name : #FiRGMethodTest,
	#superclass : #FiRGObjectTest,
	#category : #'FicusRing-Tests'
}

{ #category : #tests }
FiRGMethodTest >> testEnvironment [
		
	| environment |
	environment := ringObjectResource environmentWithClassesABC.
	
	self assert: ((environment classNamed: #A) >> #sum) environment == environment
]

{ #category : #tests }
FiRGMethodTest >> testMessages [
		
	self deny: ((ringObjectResource classA methods collect: #messages) anySatisfy: #isNil)
]

{ #category : #tests }
FiRGMethodTest >> testParseTree [

	self deny: ((ringObjectResource classA methods collect: #parseTree) anySatisfy: #isNil).

]

{ #category : #tests }
FiRGMethodTest >> testProtocol [
		
	self flag: #todo. "Missing more cases"
	self assert: (ringObjectResource classA >> #sum) protocol equals: #autogenerated.

]

{ #category : #tests }
FiRGMethodTest >> testReferredInstVars [
		
	self flag:#todo. "Test better (it should fail easily)"
	self assert: (ringObjectResource classA >> #sum) referredInstVars asSet equals: #(a1 a2) asSet
]

{ #category : #tests }
FiRGMethodTest >> testRefersToLiteral [
		
	self flag:#todo. "Test better (it should fail easily)"
	self assert: ((ringObjectResource classA >> #sum42) refersToLiteral: #sum).
]
